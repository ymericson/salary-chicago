"Police" = "Police Department",
"Streets & San" = "Streets and Sanitation",
"Transportn" = "Transportation",
"Water Mgmnt" = "Water Management"
)) %>%
dplyr::rename(
"Name" = name,
"Department" = department,
"Job" = job_titles,
"Salary" = annual_salary
)
count(df_app, 'Department')
merge(df_app, count(df_app, 'Department'), by="Department")
# library
library(treemap)
library(d3treeR)
library(rjson)
library(RSocrata)
library(tools)
library(stringr)
library(dplyr)
library(tidyverse)
library(htmltools)
library(here)
library(htmlwidgets)
# get and clean data
df_app <- read.socrata("https://data.cityofchicago.org/resource/n4bx-5kf6.json")
cols.num <- c("frequency_description", "annual_salary","hourly_rate")
df_app[cols.num] <- sapply(df_app[cols.num],as.numeric)
df_app$annual_salary <- ifelse(is.na(df_app$annual_salary),
df_app$frequency_description * df_app$hourly_rate * 50,
df_app$annual_salary)
df_app$name <- str_to_title(df_app$name)
df_app$department <- str_to_title(df_app$department)
df_app$job_titles <- str_to_title(df_app$job_titles)
df_app$job_titles <- gsub("\\s*\\([^\\)]+\\)","",as.character(df_app$job_titles))
df_app <- df_app %>% select("name", "department", "job_titles", "annual_salary") %>%
mutate(department=recode(department,
"Admin Hearng" = "Administrative Hearings",
"Animal Contrl" = "Animal Control",
"Budget & Mgmt" = "Budget and Management",
"Copa" = "Civilian Office of Police Accountability",
"Dais" = "Assets, Info, and Services",
"Housing & Econ Dev" = "Planning and Development",
"Inspector Gen" = "Inspector General",
"License Appl Comm" = "License Appeal Commission",
"Oemc" = "Office of Emergency Mgmt and Comm",
"Police" = "Police Department",
"Streets & San" = "Streets and Sanitation",
"Transportn" = "Transportation",
"Water Mgmnt" = "Water Management"
)) %>%
dplyr::rename(
"Name" = name,
"Department" = department,
"Job" = job_titles,
"Salary" = annual_salary
)
df_app$freq <- merge(df_app, count(df_app, 'Department'), by="Department")
df_app
head(df_app)
runApp('C:/Users/ymeri/salary-treemap/app')
df_app$freq.Department
df_app
head(df_app)
names(df_app)
paste0(df_app$Department, df_app$freq)
df
# library
library(treemap)
library(d3treeR)
library(rjson)
library(RSocrata)
library(tools)
library(stringr)
library(dplyr)
library(tidyverse)
library(htmltools)
library(here)
library(htmlwidgets)
library(shiny)
library(data.table)
# get and clean data
df <- read.socrata("https://data.cityofchicago.org/resource/n4bx-5kf6.json")
cols.num <- c("frequency_description", "annual_salary","hourly_rate")
df[cols.num] <- sapply(df[cols.num],as.numeric)
df$annual_salary <- ifelse(is.na(df$annual_salary), df$frequency_description * df$hourly_rate * 50, df$annual_salary)
df$name <- str_to_title(df$name)
df$department <- str_to_title(df$department)
df$job_titles <-gsub('^([0-9]+)|([IVXLCM]+)\\.?$','', df$job_titles)
df
df$job_titles
sort(df$job_titles)
df$job_titles
runApp('C:/Users/ymeri/salary-treemap/app')
# library
library(treemap)
library(d3treeR)
library(rjson)
library(RSocrata)
library(tools)
library(stringr)
library(dplyr)
library(tidyverse)
library(htmltools)
library(here)
library(htmlwidgets)
# get and clean data
df_app <- read.socrata("https://data.cityofchicago.org/resource/n4bx-5kf6.json")
cols.num <- c("frequency_description", "annual_salary","hourly_rate")
df_app[cols.num] <- sapply(df_app[cols.num],as.numeric)
df_app$annual_salary <- ifelse(is.na(df_app$annual_salary),
df_app$frequency_description * df_app$hourly_rate * 50,
df_app$annual_salary)
df_app$name <- str_to_title(df_app$name)
df_app$department <- str_to_title(df_app$department)
df_app$job_titles <-gsub('^([0-9]+)|([IVXLCM]+)\\.?$','', df_app$job_titles)
df_app$job_titles <- str_replace_all(df_app$job_titles,
c("DIR" = "DIRECTOR",
"SUPVSR" = "SUPERVISOR",
"MGR" = "MANAGER"))
df_app$job_titles <- str_to_title(df_app$job_titles)
df_app$job_titles <- gsub("\\s*\\([^\\)]+\\)","",as.character(df_app$job_titles))
df_app <- df_app %>% select("name", "department", "job_titles", "annual_salary") %>%
mutate(department=recode(department,
"Admin Hearng" = "Administrative Hearings",
"Animal Contrl" = "Animal Control",
"Budget & Mgmt" = "Budget and Management",
"Copa" = "Civilian Office of Police Accountability",
"Dais" = "Assets, Info, and Services",
"Housing & Econ Dev" = "Planning and Development",
"Inspector Gen" = "Inspector General",
"License Appl Comm" = "License Appeal Commission",
"Oemc" = "Office of Emergency Mgmt and Comm",
"Police" = "Police Department",
"Streets & San" = "Streets and Sanitation",
"Transportn" = "Transportation",
"Water Mgmnt" = "Water Management"
)) %>%
dplyr::rename(
"Name" = name,
"Department" = department,
"Job" = job_titles,
"Salary" = annual_salary
)
df_app <- merge(df_app, count(df_app, Department), by="Department") %>%
arrange(Name)
df_app$deptFreq <- paste0(df_app$Department, " ", paste0("(",df_app$n,")"))
runApp('C:/Users/ymeri/salary-treemap/app')
# library
library(treemap)
library(d3treeR)
library(rjson)
library(RSocrata)
library(tools)
library(stringr)
library(dplyr)
library(tidyverse)
library(htmltools)
library(here)
library(htmlwidgets)
library(shiny)
library(data.table)
# get and clean data
df <- read.socrata("https://data.cityofchicago.org/resource/n4bx-5kf6.json")
cols.num <- c("frequency_description", "annual_salary","hourly_rate")
df[cols.num] <- sapply(df[cols.num],as.numeric)
df$annual_salary <- ifelse(is.na(df$annual_salary), df$frequency_description * df$hourly_rate * 50, df$annual_salary)
df$name <- str_to_title(df$name)
df$department <- str_to_title(df$department)
df$job_titles <-gsub('^([0-9]+)|([IVXLCM]+)\\.?$','', df$job_titles)
df$job_titles<- str_replace_all(df_app$job_titles,
c("ADMINISTRATIVE" = "ADMIN",
"COMMUNICATIONS" = "COMM",
"ENGINEER" = "ENG",
"TECHNICIAN" = "TECH",
"OPERATIONS" = "OPS",
"MAINTENANCE" = "MAINT",
"PERFORMANCE" = "PERF",
"CORPORATION" = "CORP",
"INFORMATION" = "INFO",
"SUPERINTENDENT" = "SPRNDT"
))
df$job_titles <- str_to_title(df$job_titles)
df$job_titles <- gsub("\\s*\\([^\\)]+\\)","",as.character(df$job_titles))
df <- df %>% select("name", "department", "job_titles", "annual_salary")
# change smaller departments to "OTHER DEPTS"
df$level1 <- df$department
df$level2 <- df$job_titles
df$level3 <- NA
top_depts <- head(names(sort(table(df$department), decreasing = TRUE)), 15)
df$level1[!(df$level1 %in% top_depts)] <- "OTHER DEPTS"
other_dept_rows <- (df$level1 == "OTHER DEPTS")
df[other_dept_rows,]$level2 <- df[other_dept_rows,]$department
df[other_dept_rows,]$level3 <- df[other_dept_rows,]$job_titles
# change smaller job titles to "Other"
for (dept in top_depts) {
top_jobs <- head(names(sort(table(df[which(df$department == dept),]$job_titles), decreasing = TRUE)), 15)
df[(df$department == dept) & !(df$job_titles %in% top_jobs),]$level2 <- "OTHER"
dept_and_other_job <- (df$level1 == dept) & (df$level2 == "OTHER")
df[dept_and_other_job,]$level3 <- df[dept_and_other_job,]$job_titles
}
# # group by level1 and job, convert numeric to USD
# level1_tot <- aggregate(df$annual_salary, by=list(Category=df$level1), FUN=sum) %>%
#   rename(level1 = Category, tot_salary_level1 = x)
# level1_tot$tot_salary_level1 <- paste('$', formatC(level1_tot$tot_salary_level1, big.mark=',', format = 'f'))
# level1_tot$tot_salary_level1 <- substr(level1_tot$tot_salary_level1, 1, nchar(level1_tot$tot_salary_level1)-5)
#
# job_tot <- aggregate(df$annual_salary, by=list(Category=df$level2), FUN=sum) %>%
#   rename(level2 = Category, tot_salary_job = x)
# job_tot$tot_salary_job <- paste('$', formatC(job_tot$tot_salary_job, big.mark=',', format = 'f'))
# job_tot$tot_salary_job <- substr(job_tot$tot_salary_job, 1, nchar(job_tot$tot_salary_job)-5)
#
#
# # add salary to level1 and job title
# df <- merge(merge(df, level1_tot, by="level1"), job_tot, by="level2")
# df$tot_salary_level1 <- do.call("paste", c(df[c("level1", "tot_salary_level1")], sep = "\n"))
# df$tot_salary_job <- do.call("paste", c(df[c("level2", "tot_salary_job")], sep = "\n"))
# basic treemap
chicago_treemap <- treemap(df,
index=c("level1", "level2", "level3"),
vSize="annual_salary",
vColor="level1",
type="index",
title="Chicago Salaries by Department and Job Title",
n=1,
palette="Set3",
bg.labels=c("white"),
align.labels=list(
c("center", "center"),
c("right", "bottom")
)
)
# make it interactive
chicago_inter <- d3tree2(chicago_treemap,  rootname="Salaries",
height = 460, width = 900)
# save the widget
saveWidget(chicago_inter, file = here("/salary-treemap/ChicagoTreemap.html"))
runApp('C:/Users/ymeri/salary-treemap/app')
runApp('C:/Users/ymeri/salary-treemap/app')
runApp('C:/Users/ymeri/salary-treemap/app')
runApp('C:/Users/ymeri/salary-treemap/app')
shiny::runApp('C:/Users/ymeri/salary-treemap/app')
# library
library(treemap)
library(d3treeR)
library(rjson)
library(RSocrata)
library(tools)
library(stringr)
library(dplyr)
library(tidyverse)
library(htmltools)
library(here)
library(htmlwidgets)
# get and clean data
df_app <- read.socrata("https://data.cityofchicago.org/resource/n4bx-5kf6.json")
cols.num <- c("frequency_description", "annual_salary","hourly_rate")
df_app[cols.num] <- sapply(df_app[cols.num],as.numeric)
df_app$annual_salary <- ifelse(is.na(df_app$annual_salary),
df_app$frequency_description * df_app$hourly_rate * 50,
df_app$annual_salary)
df_app$name <- str_to_title(df_app$name)
df_app$department <- str_to_title(df_app$department)
df_app$job_titles <-gsub('^([0-9]+)|([IVXLCM]+)\\.?$','', df_app$job_titles)
df_app$job_titles <- str_replace_all(df_app$job_titles,
c("DIR" = "DIRECTOR",
"SUPVSR" = "SUPERVISOR",
"MGR" = "MANAGER"))
df_app$job_titles <- str_to_title(df_app$job_titles)
df_app$job_titles <- gsub("\\s*\\([^\\)]+\\)","",as.character(df_app$job_titles))
df_app <- df_app %>% select("name", "department", "job_titles", "annual_salary") %>%
mutate(department=recode(department,
"Admin Hearng" = "Administrative Hearings",
"Animal Contrl" = "Animal Control",
"Budget & Mgmt" = "Budget and Management",
"Copa" = "Civilian Office of Police Accountability",
"Dais" = "Assets, Info, and Services",
"Housing & Econ Dev" = "Planning and Development",
"Inspector Gen" = "Inspector General",
"License Appl Comm" = "License Appeal Commission",
"Oemc" = "Office of Emergency Mgmt and Comm",
"Police" = "Police Department",
"Streets & San" = "Streets and Sanitation",
"Transportn" = "Transportation",
"Water Mgmnt" = "Water Management"
)) %>%
dplyr::rename(
"Name" = name,
"Department" = department,
"Job" = job_titles,
"Salary" = annual_salary
)
df_app <- merge(df_app, count(df_app, Department), by="Department") %>%
arrange(Name)
df_app$deptFreq <- paste0(df_app$Department, " ", paste0("(",df_app$n,")"))
df_app <- df_app %>% select("name", "department", "job_titles", "annual_salary") %>%
mutate(department=recode(department,
"Admin Hearng" = "Administrative Hearings",
"Animal Contrl" = "Animal Control",
"Budget & Mgmt" = "Budget and Management",
"Copa" = "Civilian Office of Police Accountability",
"Dais" = "Assets, Info, and Services",
"Housing & Econ Dev" = "Planning and Development",
"Inspector Gen" = "Inspector General",
"License Appl Comm" = "License Appeal Commission",
"Oemc" = "Office of Emergency Mgmt and Comm",
"Police" = "Police Department",
"Streets & San" = "Streets and Sanitation",
"Transportn" = "Transportation",
"Water Mgmnt" = "Water Management"
)) %>%
dplyr::rename(
"Name" = name,
"Department" = department,
"Job" = job_titles,
"Salary" = annual_salary
)
df_app <- merge(df_app, count(df_app, Department), by="Department") %>%
arrange(Name)
# library
library(treemap)
library(d3treeR)
library(rjson)
library(RSocrata)
library(tools)
library(stringr)
library(dplyr)
library(tidyverse)
library(htmltools)
library(here)
library(htmlwidgets)
# get and clean data
df_app <- read.socrata("https://data.cityofchicago.org/resource/n4bx-5kf6.json")
cols.num <- c("frequency_description", "annual_salary","hourly_rate")
df_app[cols.num] <- sapply(df_app[cols.num],as.numeric)
df_app$annual_salary <- ifelse(is.na(df_app$annual_salary),
df_app$frequency_description * df_app$hourly_rate * 50,
df_app$annual_salary)
df_app$name <- str_to_title(df_app$name)
df_app$department <- str_to_title(df_app$department)
df_app$job_titles <-gsub('^([0-9]+)|([IVXLCM]+)\\.?$','', df_app$job_titles)
df_app$job_titles <- str_replace_all(df_app$job_titles,
c("DIR" = "DIRECTOR",
"SUPVSR" = "SUPERVISOR",
"MGR" = "MANAGER"))
df_app$job_titles <- str_to_title(df_app$job_titles)
df_app$job_titles <- gsub("\\s*\\([^\\)]+\\)","",as.character(df_app$job_titles))
df_app <- df_app %>% select("name", "department", "job_titles", "annual_salary") %>%
mutate(department=recode(department,
"Admin Hearng" = "Administrative Hearings",
"Animal Contrl" = "Animal Control",
"Budget & Mgmt" = "Budget and Management",
"Copa" = "Civilian Office of Police Accountability",
"Dais" = "Assets, Info, and Services",
"Housing & Econ Dev" = "Planning and Development",
"Inspector Gen" = "Inspector General",
"License Appl Comm" = "License Appeal Commission",
"Oemc" = "Office of Emergency Mgmt and Comm",
"Police" = "Police Department",
"Streets & San" = "Streets and Sanitation",
"Transportn" = "Transportation",
"Water Mgmnt" = "Water Management"
)) %>%
dplyr::rename(
"Name" = name,
"Department" = department,
"Job" = job_titles,
"Salary" = annual_salary
)
df_app <- merge(df_app, count(df_app, Department), by="Department") %>%
arrange(Name)
df_app$deptFreq <- paste0(df_app$Department, " ", paste0("(",df_app$n,")"))
runApp('C:/Users/ymeri/salary-treemap/app')
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
library(devtools)
shiny::runApp('C:/Users/ymeri/salary-treemap/app')
# library
library(treemap)
library(d3treeR)
library(rjson)
library(RSocrata)
library(tools)
library(stringr)
library(dplyr)
library(tidyverse)
library(htmltools)
library(here)
library(htmlwidgets)
# get and clean data
df_app <- read.socrata("https://data.cityofchicago.org/resource/n4bx-5kf6.json")
cols.num <- c("frequency_description", "annual_salary","hourly_rate")
df_app[cols.num] <- sapply(df_app[cols.num],as.numeric)
df_app$annual_salary <- ifelse(is.na(df_app$annual_salary),
df_app$frequency_description * df_app$hourly_rate * 50,
df_app$annual_salary)
df_app$name <- str_to_title(df_app$name)
df_app$department <- str_to_title(df_app$department)
df_app$job_titles <-gsub('^([0-9]+)|([IVXLCM]+)\\.?$','', df_app$job_titles)
df_app$job_titles <- str_replace_all(df_app$job_titles,
c("DIR" = "DIRECTOR",
"SUPVSR" = "SUPERVISOR",
"MGR" = "MANAGER"))
df_app$job_titles <- str_to_title(df_app$job_titles)
df_app$job_titles <- gsub("\\s*\\([^\\)]+\\)","",as.character(df_app$job_titles))
df_app <- df_app %>% select("name", "department", "job_titles", "annual_salary") %>%
mutate(department=recode(department,
"Admin Hearng" = "Administrative Hearings",
"Animal Contrl" = "Animal Control",
"Budget & Mgmt" = "Budget and Management",
"Copa" = "Civilian Office of Police Accountability",
"Dais" = "Assets, Info, and Services",
"Housing & Econ Dev" = "Planning and Development",
"Inspector Gen" = "Inspector General",
"License Appl Comm" = "License Appeal Commission",
"Oemc" = "Office of Emergency Mgmt and Comm",
"Police" = "Police Department",
"Streets & San" = "Streets and Sanitation",
"Transportn" = "Transportation",
"Water Mgmnt" = "Water Management"
)) %>%
dplyr::rename(
"Name" = name,
"Department" = department,
"Job" = job_titles,
"Salary" = annual_salary
)
df_app <- merge(df_app, count(df_app, Department), by="Department") %>%
arrange(Name)
df_app$deptFreq <- paste0(df_app$Department, " ", paste0("(",df_app$n,")"))
runApp('C:/Users/ymeri/salary-treemap/app')
emo::ji("poop")
devtools::install_github("hadley/emo")
emo::ji("poop")
emo::ji("poop")
devtools::install_github("hadley/emo")
emo::ji("poop")
runApp('C:/Users/ymeri/salary-treemap/app')
runApp('C:/Users/ymeri/salary-treemap/app')
emo::ji("face")
runApp('C:/Users/ymeri/salary-treemap/app')
runApp('C:/Users/ymeri/salary-treemap/app')
runApp('C:/Users/ymeri/salary-treemap/app')
length(unique(df[["department"]]))
df
length(unique(df_app[["Department"]]))
unique(df_app[["Department"]])
runApp('C:/Users/ymeri/salary-treemap/app')
Sys.Date()
runApp('C:/Users/ymeri/salary-treemap/app')
runApp('C:/Users/ymeri/salary-treemap/app')
runApp('C:/Users/ymeri/salary-treemap/app')
shiny::runApp('C:/Users/ymeri/salary-treemap/app')
# library
library(treemap)
library(d3treeR)
library(rjson)
library(RSocrata)
library(tools)
library(stringr)
library(dplyr)
library(tidyverse)
library(htmltools)
library(htmlwidgets)
# get and clean data
df_app <- read.socrata("https://data.cityofchicago.org/resource/n4bx-5kf6.json")
cols.num <- c("frequency_description", "annual_salary","hourly_rate")
df_app[cols.num] <- sapply(df_app[cols.num],as.numeric)
df_app$annual_salary <- ifelse(is.na(df_app$annual_salary),
df_app$frequency_description * df_app$hourly_rate * 50,
df_app$annual_salary)
df_app$name <- str_to_title(df_app$name)
df_app$department <- str_to_title(df_app$department)
df_app$job_titles <-gsub('^([0-9]+)|([IVXLCM]+)\\.?$','', df_app$job_titles)
df_app$job_titles <- str_replace_all(df_app$job_titles,
c("DIR" = "DIRECTOR",
"SUPVSR" = "SUPERVISOR",
"MGR" = "MANAGER"))
df_app$job_titles <- str_to_title(df_app$job_titles)
df_app$job_titles <- gsub("\\s*\\([^\\)]+\\)","",as.character(df_app$job_titles))
df_app <- df_app %>% select("name", "department", "job_titles", "annual_salary") %>%
mutate(department=recode(department,
"Admin Hearng" = "Administrative Hearings",
"Animal Contrl" = "Animal Control",
"Budget & Mgmt" = "Budget and Management",
"Copa" = "Civilian Office of Police Accountability",
"Dais" = "Assets, Info, and Services",
"Housing & Econ Dev" = "Planning and Development",
"Inspector Gen" = "Inspector General",
"License Appl Comm" = "License Appeal Commission",
"Oemc" = "Office of Emergency Mgmt and Comm",
"Police" = "Police Department",
"Streets & San" = "Streets and Sanitation",
"Transportn" = "Transportation",
"Water Mgmnt" = "Water Management"
)) %>%
dplyr::rename(
"Name" = name,
"Department" = department,
"Job" = job_titles,
"Salary" = annual_salary
)
df_app <- merge(df_app, count(df_app, Department), by="Department") %>%
arrange(Name)
df_app$deptFreq <- paste0(df_app$Department, " ", paste0("(",df_app$n,")"))
runApp('C:/Users/ymeri/salary-treemap/app')
shiny::runApp('C:/Users/ymeri/salary-treemap/app')
